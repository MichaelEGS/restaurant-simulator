name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [develop]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write   # Permiso adicional para subir artefactos
    steps:
      # PASO 1: Descargar código
      - name: Checkout Code
        uses: actions/checkout@v4

      # PASO 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # PASO 3: Instalar dependencias
      - name: Install Dependencies
        run: npm ci

      # PASO 4: Verificación de sintaxis
      - name: Check JS Syntax
        run: node --check ./modulos/*.js

      # PASO 5: Verificar calidad de código
      - name: Run ESLint
        run: npx eslint . --ext .js

      # PASO 6: Ejecutar pruebas unitarias
      - name: Run Unit Tests
        run: npm run test:unit -- --ci --reporters=default --reporters=jest-junit
        # Asegúrate de que el archivo test-results.xml se genere en la raíz del proyecto
        # Si no es así, ajusta la ruta en el siguiente paso.

      # PASO 7: Subir resultados de pruebas (Corregido)
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4  # ¡Versión actualizada!
        with:
          name: test-results
          path: test-results.xml  # Verifica que esta ruta sea correcta

      # PASO 8: Construir aplicación
      - name: Build
        run: |
          mkdir -p dist
          cp -r *.html *.css modulos data.json dist/

      # PASO 9: Desplegar en GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4  # Versión más reciente (opcional)
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist